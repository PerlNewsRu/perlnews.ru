---
tags: Perl
author: perlnews
title: Появился ещё один форк Perl: cperl 5.22.1
---

Рейни Урбан
[анонсировал](http://blogs.perl.org/users/rurban/2015/09/cperl-5221-released.html)
выпуск форка Perl: cperl 5.22.1.

Имя cperl означает Perl с классами (просматривается параллель с ранним именем
C++ — C с классами), поддержкой компилятора или просто дружелюбный к компаниям
perl. Но, к сожалению, выпуск cperl 5.22.1 оказался пока без поддержки классов,
но, тем не менее, форк имеет множество других интересных особенностей.

Утверждается, что cperl по крайне мере в 1.5 раза быстрее, чем Perl 5.22, и в 2
раза быстрее, чем Perl 5.14. Потребление памяти даже ниже, чем в 5.6.2 и 5.10.

cperl по большей части совместим с Perl 5.22, подавляющая часть CPAN модулей
будет работать с cperl.

---

Основные возможности, вошедшие в cperl 5.22.1:

* Базовые типы (Int, UInt, Num, Str)

        # Массив целых чисел @a.
        # Строгая проверка типа на этапе компиляции
        my Int @a = (0..9);

* Типы в сигнатурах функций

        sub (int $i)   # синтаксис Perl 6
        sub ($i: int)  # синтаксис в других типизированных языках

* Декларация возвращаемого функцией типа как атрибут

* Множество встроенных атрибутов функций (например `:const`)

* Фиксированные массивы с проверкой во время компиляции и оптимизациями

        # Массив размер, которого не может быть изменён
        my @a[20] :int;

* Статические методы конвертируются в вызов подпрограммы на этапе компиляции

* Модуль `Config` реализован в XS

* `strict`, `attributes`, `DynaLoader`, `XSLoader` — встроенные пакеты,
  переписаны на C

* Хэш-функция по умолчанию FNV1A (также, как и форке
  [stableperl](http://perlnews.ru/blog/2015/06/08/01-schmorps-stable-perl-fork/))

* Исправлена работа лексической `$_`

* Улучшена сборочная система 

Подробное описание новшеств и грядущих изменений в cperl, доступно
[здесь](http://perl11.org/cperl/perlcperl.html). Загрузить исходный код cperl
можно из репозитория проекта на
[github](https://github.com/perl11/cperl/releases/tag/cperl-5.22.1).
